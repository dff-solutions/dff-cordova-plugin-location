def dagger_version = "2.22.1"
def junit_jupiter_version = "5.4.2"
def powermock_version = "2.0.0"
def mockito_version = "2.25.1"
def robolectric_version = "4.2.1"

allprojects {
    apply plugin: 'maven-publish'

    repositories {
        google()
        jcenter()
    }
}

buildscript {
    repositories {
        google()
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:3.4.1"
        classpath "io.realm:realm-gradle-plugin:6.0.2"
        classpath "de.mannodermaus.gradle.plugins:android-junit5:1.2.0.0"
        classpath "com.adarshr:gradle-test-logger-plugin:1.6.0"
    }
}

subprojects {
    apply plugin: "com.android.library"
    apply plugin: "de.mannodermaus.android-junit5"
    apply plugin: "com.adarshr.test-logger"

    apply from: "${project.rootDir}/quality.gradle"

    group = 'com.dff.cordova.plugin.location'

    android {
        compileSdkVersion 29

        defaultConfig {
            minSdkVersion 19
            targetSdkVersion 29
            multiDexEnabled true
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        testOptions {
            junitPlatform {
                // Configure JUnit 5 tests here
            }
            unitTests.all {
                testLogging {
                    events "skipped", "passed", "failed"
                }
            }
            unitTests.returnDefaultValues = true
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/dff-solutions/dff-cordova-plugin-shared")
            credentials {
                username = System.getenv("GITHUB_USERNAME")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        destinationDir = file("${project.rootDir}/docs/javadoc/${project.name}/")
        options.noTimestamp true
        options.locale "en"
        failOnError false
    }

    build.finalizedBy(javadoc)

    dependencies {
        implementation(
                "com.android.support:multidex:1.0.3"
        )

        testImplementation (
                "com.android.support:multidex:1.0.3",

                "junit:junit:4.12",
                "org.junit.jupiter:junit-jupiter:$junit_jupiter_version",
                "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version",
                "org.mockito:mockito-core:$mockito_version",
                "org.mockito:mockito-junit-jupiter:$mockito_version",
                "org.robolectric:robolectric:$robolectric_version",

                "org.powermock:powermock-module-junit4:$powermock_version",
                "org.powermock:powermock-module-junit4-rule:$powermock_version",
                "org.powermock:powermock-api-mockito2:$powermock_version",
                "org.powermock:powermock-classloading-xstream:$powermock_version",

                "com.google.dagger:dagger:$dagger_version",
                "com.google.dagger:dagger-android:$dagger_version",
                "com.google.dagger:dagger-android-support:$dagger_version",
        )

        testRuntimeOnly (
                "org.junit.platform:junit-platform-launcher:1.4.0",
                "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version",
                "org.junit.vintage:junit-vintage-engine:$junit_jupiter_version"
        )

        testAnnotationProcessor (
                "com.google.dagger:dagger-compiler:$dagger_version",
                "com.google.dagger:dagger-android-processor:$dagger_version"
        )

        androidTestImplementation (
                // AndroidJUnitRunner and JUnit Rules
                // Core library
                'androidx.test:core:1.1.0',

                // Assertions
                'androidx.test.ext:junit:1.1.0',
                'androidx.test:runner:1.1.1',
                'androidx.test:rules:1.1.1',

                "com.android.support:multidex:1.0.3",

                "com.android.support.test:runner:1.0.2",

                "org.mockito:mockito-android:$mockito_version",

                "com.google.dagger:dagger:$dagger_version",
                "com.google.dagger:dagger-android:$dagger_version",
                "com.google.dagger:dagger-android-support:$dagger_version"
        )

        androidTestAnnotationProcessor (
                "com.google.dagger:dagger-compiler:$dagger_version",
                "com.google.dagger:dagger-android-processor:$dagger_version"
        )
    }

    testlogger {
        theme 'mocha'
    }
}